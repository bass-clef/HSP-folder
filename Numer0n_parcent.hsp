	
	#define pmes(%1, %2, %3) pos %1, %2 :mes %3
	#define N_MAX 6
	
	ddim par, 10, N_MAX :dim add, 10, N_MAX
	sdim buf :sdim albuf
	dim ans, N_MAX
	for i, 0, N_MAX, 1 :repeat 10 :par(cnt, i) = 0.0 :loop :next
	
	screen 0, 10*4*N_MAX+20+100, 200+20, 0
	objmode 2 :font msgothic, 14 :objsize 100, 20
	pos   0,  0 :input buf, 100, 20, N_MAX
	pos 100,  0 :input eat, 25, 20, 1
	pos 125,  0 :input byte, 25, 20, 1
	pos 150,  0 :button gosub "view & calc", *calc
	pos ginfo(12)-100,  0 :mesbox albuf, 100, ginfo(13), 5, 0
	stop
*draw
	redraw 0
	colorwhite :boxf :color
	repeat 10 :pos 0, cnt*16+20+14 :mes ""+cnt+":" :loop
	repeat N_MAX :pos 10*4*cnt+20, 20 :mes ""+(cnt+1) :loop
	for i, 0, N_MAX, 1
		repeat 10
			pos 10*4*i+20, cnt*16+20+16
			mes""+strf("%d", par(cnt, i))+"%"
		loop
	next
	
	yy = ginfo(13)
	repeat N_MAX
		if ans.cnt != -1 :pos 10*4*cnt+20, yy-20 :mes ""+ans.cnt
	loop
	redraw 1
	return
	
*calc
	for i, 0, N_MAX, 1 :repeat 10 :par(cnt, i) = 0.0 :add(cnt, i) = 0 :loop :next
	if albuf != "" {
		notesel@hsp albuf
		repeat notemax
			buf = noteget(cnt)
			gosub *calc2
		loop
	}else :gosub *calc2
	
	return
*calc2
	if strlen(buf) == 0 :gosub *draw :return
	if strlen(buf) == N_MAX+3 {
		eat = int(strmid(buf, N_MAX+1, 1))
		byte = int(strmid(buf, N_MAX+2, 2))
	}
	if (eat == 0) && (byte == 0) {
		repeat N_MAX
			j = int(strmid(buf, cnt, 1))
			par(j, cnt) = 0.0
			add(j, cnt) = 0
		loop
	}else {
		if (byte) {
			repeat N_MAX
				j = int(strmid(buf, cnt, 1))
				for i, 0, 10, 1
					add(j, i)++
				next
				par(j, cnt) = 100.0 / (double(N_MAX)/double(byte+eat))/double(add(j, cnt))
			loop
		}
	}
	// ans
	for i, 0, N_MAX, 1
		max_ = -1.0 :j = -1
		repeat 10
			pos 10*4*i+12, cnt*16+20+16
			n = par(cnt, i)
			if n > max_ {
				max_ = n :j = cnt
			}elif n == max_ {
				if add(cnt, i) < add(j, i) :j = cnt
			}
		loop
		if j != -1 {
			ans.i = j
		}
	next
	
	gosub *draw
	return
