	
	#uselib "winmm.dll"
	#cfunc	timeGetTime		"timeGetTime"
	#uselib "kernel32.dll"
	#func	Beep	"Beep"		int, int
	
	c = 261.6255653005986
	cd= 277.1826309768721
	d = 293.6647679174076
	de= 311.1269837220809
	e = 329.6275569128699
	f = 349.2282314330039
	fg= 369.9944227116344
	g = 391.99543598174927
	ga= 415.3046975799451
	a = 440
	ab= 466.1637615180899
	b = 493.8833012561241
	
	dim arg
	argmax = -1
	flag = -1
	
	screen 0, 300, 30
	font msgothic, 15
	
*main
	stick@hsp key
	redraw 0
	if key & 64 {
		colorwhite :boxf :color
		flag = ((flag+1)+1)\3-1
		if flag == 1 {
			bpm = 60000.0/avarage
			pos 0, 0 :mes "計測終了 BPM:"+BPM
			note16 = 60.0*250.0/BPM	// 16分音符
			note8 = note16*2		// ８分音符
			note4 = note8*2			// ４分音符
			note2 = note4*2			// ２分音符
			wholenote = note2*2		// 全音符
		}
		if flag == 0 :old = timeGetTime() :argmax = -1
	}
	
	if flag == 1 {
		if key & 32 {
			beepping = (beepping+1)\3
			count = 0
			old = timeGetTime()
		}
		colorwhite :boxf :color
		pos 0, 0 :mes "計測終了 BPM:"+BPM
		if beepping {
			now = timeGetTime()
			if beepping == 2 :mes "メトロノーム:"+count :else :mes "数値:"+count
			if avarage <= now-old {
				if beepping == 2 :Beep c, note16
				old = now
				count++
			}
		}else :mes "停止"
	}else :if flag == 0 {
		colorwhite :boxf :color
		pos 0, 0
		
		if key & 16 {
			if 0 <= argmax {
				now = timeGetTime()
				arg.argmax = now - old
		
				argmax++
				old = now
		
				avarage = 0.0
				repeat argmax
					avarage += arg.cnt
				loop
				avarage /= argmax
			}else {
				old = timeGetTime()
				argmax = 0
			}
		}
		if 1 <= argmax {
			mes "計測中("+argmax+") BPM:"+(60000.0/avarage)+" ..."
		}else {
			mes "スペースで刻む"
		}
		
	}else :if flag == -1 {
		colorwhite :boxf :color
		pos 0, 0 :mes "計測開始は Ctrlキー"
	}
	redraw 1
	
	await 1
	goto *main
