	
	// sin( PI*2 / 周期 * Count ) * 振幅
	
	#module
	// 滑らかな移動 周期, ふり幅, 初期値
	#define	global	ctype	reiterate(%1, %2, %3 = -1)	reiterate__(%1, %2, %3)
	#defcfunc reiterate__ double cycle, double breadth, int begincount
		if begincount != -1 :count = begincount :return 0
		count = (count+1)\cycle
	return sin(M_PI*2.0 / cycle * double(count)) * breadth
	
	// 手振れ検出 精度, グローバルマウスx, y
	#define	global	ctype	isshake(%1, %2 = ginfo_mx, %3 = ginfo_my)	isshake__(%1, %2, %3)
	#defcfunc isshake__ int Precision, int gmx, int gmy
		ret = 0
		void double(abs(oldx-gmx))
		if (Precision < refdval) {ret = 1
		}else :void double(abs(oldy-gmy)) :if (Precision < refdval) :ret = 1
		
		oldx = gmx
		oldy = gmy
	return ret
	// 点と点の距離  -  Distance for two points
	#defcfunc dftp double px1, int py1, int px2, int py2
	return sqrt(powf(px1-px2, 2)+powf(py1-py2, 2))
	#global
	
	randomize
	i = 2.0
	type = "A", "B", "CCCC"
	t = rnd(length(type))
	flag = 0
	repeat length(type)
		l = strlen(type.cnt)
		if len < l :len = l
	loop
	
	fontsize = ginfo(12)/2/len
	font msgothic, fontsize
	width -1, fontsize
	
	repeat
		if getkey(13) & 0x8000 :flag = 1
		if flag :i += 0.2
		if i <= tc {
			tc = 0 :t = (t+1)\3
			if 60 <= i :break
		}else :tc++
		gosub *draw
		
		wait 1
	loop
	
	color 255, 255, 255
	gosub *draw
	wait 20
	color
	gosub *draw
	
	stop
*draw
	clr = ginfo_r, ginfo_g, ginfo_b
	redraw 0
	colorwhite :boxf :color clr.0, clr.1, clr.2
	pos 0, 0
	mes ""+type.t
	redraw 1
	return
